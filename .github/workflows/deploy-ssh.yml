name: 🚀 Deploy via SSH

on:
  push:
    branches: [ main, master ]
  workflow_run:
    workflows: ["🧪 Test Suite"]
    types: [completed]
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐘 Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: pdo, pdo_mysql, bcmath, ctype, fileinfo, json, mbstring, openssl, tokenizer, xml, gd, zip

    - name: 📦 Install dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: 🎨 Build assets
      run: |
        if [ -f "package.json" ]; then
          npm install
          npm run build
        else
          echo "No package.json found, skipping asset build"
        fi

    - name: 🚀 Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd ${{ secrets.PROJECT_PATH }}

          echo "🔄 Starting deployment..."

          # Pull latest changes
          git pull origin main || git pull origin master

          # Install dependencies
          composer install --no-dev --optimize-autoloader

          # Clear caches
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear

          # Run migrations
          php artisan migrate --force

          # Optimize
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # Set permissions
          chmod -R 755 storage bootstrap/cache
          chown -R www-data:www-data storage bootstrap/cache || chown -R apache:apache storage bootstrap/cache || echo "Permissions not changed"

          echo "✅ Deployment completed successfully!"

    - name: 📞 Notify deployment
      run: echo "✅ Deployed to SSH server: ${{ secrets.SERVER_HOST }}"
