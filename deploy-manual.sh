#!/bin/bash

# üöÄ Script de d√©ploiement manuel pour transition CI/CD
# Utilisez ce script pendant que vous mettez en place GitHub Actions

set -e  # Arr√™ter en cas d'erreur

# Configuration - MODIFIEZ CES VALEURS
SERVER_HOST="votre-serveur.com"
SERVER_USER="votre-user"
PROJECT_PATH="/var/www/html/ecommerce"
SSH_KEY_PATH="~/.ssh/id_rsa"

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ D√©ploiement manuel - EcommerceApp${NC}"
echo "========================================"

# V√©rification des pr√©requis
echo -e "${YELLOW}üìã V√©rification des pr√©requis...${NC}"

if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git n'est pas install√©${NC}"
    exit 1
fi

if ! command -v composer &> /dev/null; then
    echo -e "${RED}‚ùå Composer n'est pas install√©${NC}"
    exit 1
fi

# V√©rifier les changements non committ√©s
if ! git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}‚ö†Ô∏è  Vous avez des changements non committ√©s${NC}"
    read -p "Voulez-vous continuer ? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ Pr√©requis OK${NC}"

# √âtape 1: Tests locaux (optionnel)
echo -e "${BLUE}üß™ √âtape 1: Tests locaux${NC}"
read -p "Voulez-vous lancer les tests ? (Y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    if [ -f "phpunit.xml" ]; then
        echo "Lancement des tests..."
        php artisan test
        echo -e "${GREEN}‚úÖ Tests r√©ussis${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Aucun test configur√©${NC}"
    fi
fi

# √âtape 2: Installation des d√©pendances
echo -e "${BLUE}üì¶ √âtape 2: Installation des d√©pendances${NC}"
composer install --no-dev --optimize-autoloader
echo -e "${GREEN}‚úÖ D√©pendances install√©es${NC}"

# √âtape 3: Build des assets (si Vite)
echo -e "${BLUE}üé® √âtape 3: Build des assets${NC}"
if [ -f "package.json" ]; then
    npm install
    npm run build
    echo -e "${GREEN}‚úÖ Assets build√©s${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Aucun package.json trouv√©${NC}"
fi

# √âtape 4: D√©ploiement
echo -e "${BLUE}üöÄ √âtape 4: D√©ploiement sur le serveur${NC}"

# Cr√©er un tarball des fichiers √† d√©ployer
echo "Cr√©ation de l'archive de d√©ploiement..."
tar -czf deploy.tar.gz \
    --exclude='.git' \
    --exclude='.github' \
    --exclude='node_modules' \
    --exclude='tests' \
    --exclude='*.md' \
    --exclude='.env*' \
    --exclude='phpunit.xml' \
    --exclude='vite.config.js' \
    --exclude='package-lock.json' \
    --exclude='deploy-manual.sh' \
    --exclude='deploy.tar.gz' \
    .

# Upload via SCP
echo "Upload vers le serveur..."
scp -i "$SSH_KEY_PATH" deploy.tar.gz "$SERVER_USER@$SERVER_HOST:$PROJECT_PATH/"

# Nettoyer
rm deploy.tar.gz

# Ex√©cution des commandes sur le serveur
echo "Ex√©cution des commandes sur le serveur..."
ssh -i "$SSH_KEY_PATH" "$SERVER_USER@$SERVER_HOST" << EOF
    cd $PROJECT_PATH

    echo "üîÑ Extraction des fichiers..."
    tar -xzf deploy.tar.gz
    rm deploy.tar.gz

    echo "üîß Installation des d√©pendances..."
    composer install --no-dev --optimize-autoloader

    echo "üîë G√©n√©ration de la cl√©..."
    php artisan key:generate

    echo "üóÇÔ∏è Nettoyage du cache..."
    php artisan config:clear
    php artisan cache:clear
    php artisan view:clear
    php artisan route:clear

    echo "üóÉÔ∏è Migrations..."
    php artisan migrate --force

    echo "‚ö° Optimisation..."
    php artisan config:cache
    php artisan route:cache
    php artisan view:cache

    echo "üîí Permissions..."
    chmod -R 755 storage
    chmod -R 755 bootstrap/cache

    echo "‚úÖ D√©ploiement termin√© !"
EOF

echo -e "${GREEN}üéâ D√©ploiement r√©ussi !${NC}"
echo "========================================"
echo -e "${BLUE}üìä R√©sum√© du d√©ploiement:${NC}"
echo "- Fichiers d√©ploy√©s sur $SERVER_HOST"
echo "- D√©pendances mises √† jour"
echo "- Cache optimis√©"
echo "- Base de donn√©es migr√©e"
echo ""
echo -e "${YELLOW}üí° Prochaine √©tape: Configurez GitHub Actions pour automatiser cela !${NC}"
