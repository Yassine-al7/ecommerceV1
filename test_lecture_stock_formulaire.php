<?php
/**
 * Test de la lecture du stock dans le formulaire
 */

require_once 'vendor/autoload.php';

use App\Models\Product;

// Simuler l'environnement Laravel
$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "üß™ TEST DE LA LECTURE DU STOCK DANS LE FORMULAIRE\n";
echo "==================================================\n\n";

try {
    // R√©cup√©rer tous les produits
    $products = Product::all();

    if ($products->isEmpty()) {
        echo "‚ùå Aucun produit trouv√© dans la base de donn√©es\n";
        exit;
    }

    echo "‚úÖ Produits trouv√©s: " . $products->count() . "\n\n";

    foreach ($products as $index => $product) {
        echo "üì¶ Produit " . ($index + 1) . ": {$product->name}\n";
        echo "   üè∑Ô∏è ID: {$product->id}\n";
        echo "   üì¶ Stock total (quantite_stock): {$product->quantite_stock}\n";

        // Simuler les attributs data du formulaire
        $dataStock = $product->quantite_stock;
        $dataStockCouleurs = json_encode($product->stock_couleurs);
        $dataCouleurs = json_encode($product->couleur);

        echo "   üîç Attributs data du formulaire:\n";
        echo "      data-stock: {$dataStock}\n";
        echo "      data-stock-couleurs: {$dataStockCouleurs}\n";
        echo "      data-couleurs: {$dataCouleurs}\n\n";

        // Simuler la logique JavaScript du formulaire
        echo "   üéØ SIMULATION DE LA LOGIQUE JAVASCRIPT:\n";

        $couleurs = $product->couleur;
        $stockCouleurs = $product->stock_couleurs;

        if ($couleurs && is_array($couleurs) && $stockCouleurs && is_array($stockCouleurs)) {
            echo "      üìã Traitement des couleurs:\n";

            $couleursDisponibles = [];

            foreach ($couleurs as $couleur) {
                $couleurName = is_array($couleur) ? $couleur['name'] : $couleur;

                // Chercher le stock pour cette couleur
                $stockCouleur = 0;
                $couleurTrouvee = false;

                foreach ($stockCouleurs as $stock) {
                    if (is_array($stock) && isset($stock['name']) && $stock['name'] === $couleurName) {
                        $stockCouleur = intval($stock['quantity'] ?? 0);
                        $couleurTrouvee = true;
                        break;
                    }
                }

                if ($couleurTrouvee) {
                    if ($stockCouleur > 0) {
                        $couleursDisponibles[] = [
                            'name' => $couleurName,
                            'stock' => $stockCouleur
                        ];
                        echo "         ‚úÖ {$couleurName}: Stock = {$stockCouleur} (disponible)\n";
                    } else {
                        echo "         ‚ùå {$couleurName}: Stock = {$stockCouleur} (masqu√©e)\n";
                    }
                } else {
                    echo "         ‚ö†Ô∏è {$couleurName}: Stock non trouv√©\n";
                }
            }

            echo "\n      üìä R√©sultat du filtrage:\n";
            if (count($couleursDisponibles) > 0) {
                foreach ($couleursDisponibles as $couleur) {
                    echo "         ‚Ä¢ {$couleur['name']} (Stock: {$couleur['stock']})\n";
                }
            } else {
                echo "         ‚ùå Aucune couleur disponible\n";
            }

            // Simuler l'affichage dans le dropdown
            echo "\n      üé® AFFICHAGE DANS LE DROPDOWN:\n";
            echo "         <option value=\"\">S√©lectionner une couleur</option>\n";

            foreach ($couleursDisponibles as $couleur) {
                $optionText = "{$couleur['name']} (Stock: {$couleur['stock']})";
                echo "         <option value=\"{$couleur['name']}\" data-stock=\"{$couleur['stock']}\">{$optionText}</option>\n";
            }

        } else {
            echo "      ‚ùå Donn√©es insuffisantes pour le traitement\n";
        }

        echo "\n" . str_repeat("-", 80) . "\n\n";
    }

    echo "üéØ DIAGNOSTIC DU PROBL√àME:\n";
    echo "1. V√©rifiez que 'data-stock-couleurs' est bien pass√© au formulaire\n";
    echo "2. V√©rifiez que le parsing JSON fonctionne correctement\n";
    echo "3. V√©rifiez que la logique de filtrage est appliqu√©e\n";
    echo "4. V√©rifiez que les attributs 'data-stock' sont corrects\n\n";

    echo "üîß SOLUTIONS IMPL√âMENT√âES:\n";
    echo "1. ‚úÖ Logs de debug ajout√©s dans le JavaScript\n";
    echo "2. ‚úÖ Logique de filtrage am√©lior√©e\n";
    echo "3. ‚úÖ Gestion des erreurs de parsing\n";
    echo "4. ‚úÖ Fallback vers le stock total si n√©cessaire\n\n";

    echo "üöÄ POUR TESTER:\n";
    echo "1. Allez sur votre page d'√©dition de commande admin\n";
    echo "2. S√©lectionnez un produit\n";
    echo "3. Ouvrez la console JavaScript (F12)\n";
    echo "4. V√©rifiez les logs de debug\n";
    echo "5. V√©rifiez que le stock affich√© correspond au stock r√©el\n\n";

} catch (Exception $e) {
    echo "‚ùå ERREUR: " . $e->getMessage() . "\n";
    echo "üìç Fichier: " . $e->getFile() . "\n";
    echo "üìç Ligne: " . $e->getLine() . "\n";
}
